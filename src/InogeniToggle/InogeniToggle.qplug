-- Information block for the plugin
PluginInfo = {
  Name = "INOGENI~Toggle",
  Version = "1.0",
  BuildVersion = "1.0.1.4",
  Id = "366c55dd-d8ca-4f32-93b6-bc5b739c51ca",
  Author = "Isaac Porter",
  Description = "INOGENI Toggle",
  SerialPin = true,
  IsManaged = true,
  Model = "Toggle",
  Type = Reflect and Reflect.Types.ControlIO or 0
}

-- Define the color of the plugin object in the design
function GetColor(props)
  return { 210, 71, 39 }
end

-- The name that will initially display when dragged into a design
function GetPrettyName(props)
  return "INOGENI\nToggle\n" .. PluginInfo.Version
end

-- Optional function used if plugin has multiple pages
PageNames = {"Main"} --List the pages within the plugin
function GetPages(props)
  local pages = {}
  for ix,name in ipairs(PageNames) do
    table.insert(pages, {name = PageNames[ix]})
  end
  return pages
end

-- Optional function to define model if plugin supports more than one model
function GetModel(props)
  local model = {}
 return model
end

-- Define User configurable Properties of the plugin
function GetProperties()
  local props = {}
  return props
end

-- Optional function to define pins on the plugin that are not connected to a Control
function GetPins(props)
  local pins = {}
  table.insert(pins,{Name="Serial Port", Direction="input", Domain="serial"})
  return pins
end

-- Optional function to update available properties when properties are altered by the user
function RectifyProperties(props)
  return props
end

-- Optional function to define components used within the plugin
function GetComponents(props)
  local components = {}
  return components
end

-- Optional function to define wiring of components used within the plugin
function GetWiring(props)
  local wiring = {}
  return wiring
end

-- Defines the Controls used within the plugin
function GetControls(props)
  local ctrls = {}
  table.insert(ctrls, {
    Name = "Status",
    ControlType = "Indicator",
    IndicatorType = "Status",
    UserPin = true,
    PinStyle = "Output"
  })
  table.insert(ctrls, {
    Name = "select_off",
    ControlType = "Button",
    ButtonType = "Toggle",
    Count = 1,
    UserPin = true,
    PinStyle = "Both",
  })
  table.insert(ctrls, {
    Name = "select_pc1",
    ControlType = "Button",
    ButtonType = "Toggle",
    Count = 1,
    UserPin = true,
    PinStyle = "Both",
  })
  table.insert(ctrls, {
    Name = "select_pc2",
    ControlType = "Button",
    ButtonType = "Toggle",
    Count = 1,
    UserPin = true,
    PinStyle = "Both",
  })
  table.insert(ctrls, {
    Name = "system_fwversion",
    ControlType = "Indicator",
    IndicatorType = "Text",
    Count = 1,
    UserPin = true,
    PinStyle = "Output",
  })
  return ctrls
end

--Layout of controls and graphics for the plugin UI to display
function GetControlLayout(props)
  local layout = {}
  local graphics = {}
  local CurrentPage = PageNames[props["page_index"].Value]
  if CurrentPage == "Main" then
  
    Logo = "iVBORw0KGgoAAAANSUhEUgAABSAAAADhBAMAAAAqtwaUAAAAJFBMVEVHcExtgY5vgIxtgY6Fd3vXUC1tgY5tgY7XUC3XUC3XUC1tgY7zvYwRAAAACnRSTlMAYjWNE8novI9VPAvSogAAFIVJREFUeNrsnb9vG8kVx5fUUiblRo6DuFDD+4ELYjVyLsgVapg72JdIjYoYSFg5jnANG92dEBdqjAAHOKqEIAZyrARDBKSpQutAFvvP5XIJcuZyfryZefPe2x/PpVer5e5Hn/m+2dllltWq8m//+erpD/Xq27+PsrbaYqxffPNUrdTTV/9oz0pbPPW7V2Olqdmr1pNtMeD4jTLWH1pNtkVbAwuOPyDZWrItwkbmtXLW39rT1BbVaD1WgLq+aM9UWxT1WgHrr+25qtvQ+N4nL77+ibBjOlfgapOk9Uze++TFxz+t0hF3zor/1J8lXdbBWHnUbNhyZ6rf/Pfqfol4dTe+KNVz0I99+n65RjYei+IW75i75V/9YYr4+A6RKYNk/un6qbTU0P/sIJX26k7+d3X/hHdC7hSlegv4iMNst/xjxbZ292f//3+8Y94o/+q514//VvlWIiLz9+6/+KLwqz3nXu8WSWqpY//Hq/sVJZBrABTfQYF84nUuSYD05/H7wp8kz++9COHixLnjTTogP3L6SBqQ+eTdjzSSAGQQj0q9xMWx+2ASxoUkQ3bf/f/bSgC5uvNjAUD2w3jEHbW7D4K5kGTIJ55HJgDI/ZUtFkN2IAdjxU/k/Uk4F5IMeba6wUg+kN3SJsfcQIbz+D2RSCe8sx/DhSBDdkpbnMoHsrxvJEUGA+kzH66ZIUc5+A8mUVzsyQGy/IuQFJkSyLWNjnmBnKqo+iNCb/0gkosTOUP2TpFEkSmBXBuccBQZCuRjFVnRrXb+61guBBlyTfU4ikwIZL7+sY4ZgRzE8hh9E7G7H82FnAzZXd/mVDiQmkNGUWQYkPk4Gkh1HcfjWTwXcrrsjmabkWwgNzSf6zkbkK8VQv0+ZrxG4FHQkH2nSKPIhEDqDhlDkUFA9hVKhc9G5vsYXMgZsnUmxlBkQiC1p+Y5D5AYA3bcoP0zFC7kDNmHRRpFJgRSe8gIigwBcqqQ6irwoH9eEAFJZcidIo0iEwK5W6RRZACQ/TEWkIG3ED9D4uJENpAI0yjkQMYrMgDIc4VWN0EN9qQoajZk64FcjAQDqT/keEX6A/lYIVbI9Ph+UTtDGj7SafWAjFakN5D5GBPImf8Rf4TGhfAMiaBIeiCjFekN5EOFWt6TkZ1JDYE0Sf+0ekDGKtIXyIFCLk8J5Pt4XMhZXGG8uqPKAan5FUmBfI0NpKciP0fkQr4hYxVJ3mXHK9ITSHRBeiqyO6klkEbdRCqSw5CRivQEcooPpJcidzG5kDNkm3PIcfWAjFOkH5AJBOmlyA4qFxUwZKQiWYCMU6QfkNMUQHoocqegNSR7hoxUJA+QUYr0AjKJID0UiSvIShgyTpE8QEYp0gvIgzRAHvEIUtCtQ9tc1rFMIK1pfkgDZJ6GR/DtGmRBil9cEa9IJkPGKNIHyESCBCsSWZBVmIeMVCQXkBGK9AFynArIaxZBygEyt17diB6BDci3FED2VbK6IJ+DrMo8ZJwi2YAMV6QHkNN0QL6hvklTnS47SpF8QL5ND+QgHY+gd/08KegNKSJDRiiSq8uOUCQcyMcJgYS0NWdFUw0Zrkg+Q3q+iTkEyHdbmqcYNfZqazbc13nx9cf3fGoYkCEf3cMoT0MGK5IRyMV2YiD76O/A7Xm1Nc4T8OjDDL02AVcGo5wfblg5IEMVCQZyig7kls8NbUdLs/zlKAUoVEC6DBn6YAAnkIGKhAK5+igNviFnvqd2pb5MgqMcQ4YqkhPIQEVCgeyptIZ0jdk2hyzTUKLNkEyGDFQkY5cdqkgokFOV1pCOt1h0LR/8dpiKRzmGDFQkqyHDFAkEMlepDTkLnYRM+UV7YjJkoCJ5gQxSJBDInkptSPuYvcPCIxWQOeTqDisHZJAigUBOkxvSOmabR+zblDwKypBhimQGMuRsAYEcpzfkLKTHXg5T8igoQ4YpkhvIeSog+yq9IW1j9g7y7YAKZsggRbJ22WGnCwbkgUpvSMv97Nw0K36aZY0xZIgiuQ0ZoEgYkGMKQ5rfzWdamnubmEdRGTJkSRc7kP7nCwTkQFEY0vz04SH6UuoqGjLg8/IDOU8CZE9RGNK81330h02qmCEDFMkPpPcJAwE5pTGkaeInN3TYo6xZhvRXpAAg5ymAHNMY8hp6jNAF3zXLkP6KZO+y/c8YBMiBojGkKUQe8nQ08gzprUgBhvRVJATILUVjSNPEj94fv6oRkFBD+iqSEsgJjiIhQE6pDHnlESGXWX2AzOFXdygWyEc4ioQAOaYy5LXHLOQJBZBsGfI+jiIpgdzbQVEkAMiBojKkPkRuMrXYnBlyex9FkaRAdlAUCQCyp6gMqd/vDuJDJlXJkNsbKIqk7LL3MhRFAoCc0hnyUrfdWXyWqp4hMxRFkhoyQ1EkAMhzOkPeQHuaOQmPfBlyO0NRJC2QKIp0A5krOkPOoD3NSVZ3Q6IokhhIDEW6gewrOkOqIaynif9aSukZ0vKqjrlYIHMERbqB7BEaUrfjXb4Rm9WQRkV6rEomBhJDkW4gp5SGvITdxSAasTkzJIoiabtsFEW6gTynNKSmq9HdtBg1wZAIiqQ2JIIi3UAqSkOudzVdxhGbNUNiKJIcSLMi97CAHChKQ67fq+mwrMylBTLXGzKPViQ5kGZF3mIB2SM15Pqjh5s4j/tWMENanv6diwUyWpGMQPZAr9LVLIZcZDUzpCFDxqdIeiCjFekEckpryEvnByeMkMwZ0vLt4HN2IHcNQMYq0gnkOa0hbwCzPs8aY0jz7ZptqYaMVaQTyDGtIa8Bsz5kEZI7Q0anSA4gIxXpAlL//YbpDDkDzPpkzTFkpCI5gIxUpAvIvqI1ZPludofn6S4hGTI2RbIAGadIF5A9YkOWd70R/yxopQ0Zp0gWIOMU6QJyi9qQR45TSncjW0KGjEyRDF12rCJdQD6kNuSRCwnCnkaCIaMUyWPIKEW6gDynNuSV4w+RbmWFiAwZlyKZgIxRpAvIMbUhb1zz4susdkDmNkOav+RxWyqQMYpkBFJvyJlrXnxOCKSADBmVIrmAjFCkA0j9NGRKQ5aAPONsskVkyBhFcgFpXjl3GwnkQFEbUrlu1DyrIZBWQ0YokqfLtrZiJ3KB1BuyNDMevtKzPoYMVySbIS2KHEUB2aM35MW723RZZ31kZMgIRfIBGaxIRiAh++5GPZZcF0MGK5IRyNAU6QByi96QKzPjHcbVuWIyZLgiGYEMVaQDyAN6Qx7ZT9cya6AhQxXJCWRginQA+ZDekJf2T3VLCaSQDBmsSL4uO1iRDiCn9Ia8sl+IeSMNGahITkMGKtIB5Dm9Id/YgXxbRyCdhgy8o80KZJgiGYE0GPLGTsR34b+wc89VQ38g3TstlUYPuduQeZAieYE0KnIZDuSY3pAOIP+F6TvXeQdkyLuFZw2DDBmmSF4ggxTJCKTBkNf2y/2MEshNIiDdhgxTJDOQIYqUZ8gVIA8x14vLBRJgSHOjfSu0yw5TpANIRW/IWQOBBBjSosg9qYYMUSQjkFtBQO41NENaUuStWCADFGkHMpdnyL2mGjJEkexA+iuSEUiIISGnpiEZMiRFsgNpVuRpZQypGggkyJABiuQH0qzIUU0M2dwMGZAiubvsAEW2hqyOIf0VyW9I7xRpB7Irr8tucIb0V6QAIH0VaQdywG3IZgCZAw3prUgJQH7mlyLbLrtCGdJbkRKANK+cO61ghjxsM2SMIkUA6ddoCzfk3WZMjIMN6alIAV22ryKF36lpCJBgQ3oqUoQh/RQp3JCbvIsrxGVIT0XKANJLkcJX+zADKc+QfooUAqSPIoWvh1y/ffus2RnSosilWCB9FCnPkE0E0sOQWT6BL+mSAqSHIoUbUne6mp0hvVKkjC7bS5HynqlZechr/VUqEY/Bdt9frX0MQ5Z36qws0pA+ipRiSA9Fynsu2wFk1IsC8pV/OxhAlvbp/pfFGtKiyJFUIM2KPPYDkvvNFV34YlT/wgESoXIvQ3ooUg6Qd6CKZARyCwBkDl21FFL7GBkyzZHYfw04RcoBEqxIeW8/u1zZaO34FzU0pF+G9FCkICChimQEEvJ+SM0f1qiGQHoaEjwXKabLhiuS8YWlvTAgt1tDghUpyJBQRcp7x/hLBzR76bxUlQwJVqQkIIGKdADZpzfkhQPIZ60hwYoUBaRRkYsRHEiG76kZ2aNKzK2a2mTILHsCUqQoIGGKdADZ5f4mr03cmfG6GBKoSFlAghTp+q5DckPOXB9imc5L1cmQQEVK6rKBihT3bbDXrvO1GLWGtCryVKohQYoU933Zpa8n7hTpmKhyhoQpUhiQOUCRLiCn1IYsfYF7Dln2V3Ug8wBDghQpDEjzbNWPinQBeUBtyKPSVpN0bXalM6RNkSOpQAIU6QJyi9qQL53UzGtnyJAMCVKkNCAtKXIIBLJPbcgLJzWL+gEZZEhAihTWZdsU+RwI5IDakOUe+jBdV1NxQwIUKc6Q7hTpAjInNuQMIPmTVF6qVoYEpEh5QDoV6QJSPxGZzpDX5a008z5vW0MCFSkPSOdcpBPIc1pDXpW36joX/TU2Q2bZRw5FCgTSpUgnkAe0hrxc20xjgWFrSJgiBQLpSpFOILdoDfkSkPSwQmTlM6RTkeK6bLcinUD2aQ154f7kaCGy+oZ0KVKiIS2KHEKAzEkNOVvfTPO+iUXdgAw2pEORIoG0K9IJpLbNTmbI6/XNNG02EhbVvpcNUaRIIO2KdAN5TmnIK80pL1KN2TXIkA5FygTSqkg3kAeUhrzUbHeWauKnBhnSpshjqUBaFekGskdpyAsQN0hc1CFD2hUpsct2KNIN5IDSkKMM1NXgjNm1MKRVkUINaVOkG0hdV5PKkNe67TasS/6aniGtipQKpEWRACCndIZ8oz1617N1zTZk1jUrUiqQFkV+4AbygM6QR9oNdX9O81oBGWVIsyIXn0sF0qzIpftK9+kMeaHdcLdI09bUxJAWRf5FKpDmlXMA9eRkhpzpN7xjW2HcZkiLIot0QO7GAWlWJGAsPKcy5I3BANaHMFpDWhQp1pBwRWqAfEhlyEvDlmdpFFmXDOmhSDlAghU5h6gskSEvwOSgKLIO97I9FSkHSLAiNUDmRIacmSYX7xRJFFmbDAlXpCAgoYrUzaeMaQx5YxSA/lCHdTFkbIaEK1IQkFBF6oA8oDHkpXHTM/ChNjNDghUppsuGK1J3lfs0hrwwbnqoP9a91pCeipRkSKAidUDmJIacmTfdsD452WZI090D2UDCFKkdB6cUhryybDspEgzadTIkUJGigIQpcg5hJ4khX3qx886jTG2GBCtSFpD5JBTILoUhbeOv6X0Hi+3WkD6KlAUkSJH6UXCc3pA31r8l4+KQIaKXqpwhYYqU1GUDFakH8nF6Qx552iyeyHoZEqRIYYaEKFIP5CC9Ie0ds/EdRRFE1itDghQpDUiAIg2N6zi1IW+Cj3y5XXUgcxRDQhQpDUiAIg1A/ru9M+ZpI4YCcBRuSNSFQFVWlIp26EKKBEOXKyUCNoYiQSbapUOWsNAhS4cipZkYYKBj1UjNBm2UDP1zDVSlJLHfe76zz8/He0OmOLEu331+fvbFddeG3DOm5//M5qXkkERFsgMSV6QGyLJrQ2I17jmo0++WgzaknRySokh2QOKK1NWau24N2U9X1h/W4pCBtGRIXJHMZtkURV5TfGbfkPgnItsHhscLD96Qum1RnA2JKlIH5MR69r6NaNDWsckX+/fw41qtslipEF9q7QQ55LHBF+hfXBkSVSRDIDFFapeH1Wd6WYrviYRmPXBD2onYkSHRu5YhkJgitUCWXAJ5Ruj4XH6BtGZITJEcgUSmYvoNNA13PP4gub0thkyrSI5AIorUA1l3B+QeqePbmQP5KDhDIorkN8tGFakHMnLGY89O+iuGRBXJ0pCwIoE9r199TmkIlR/JIVFF8gQSVCQAZNkVkNSitnNFegIysmhIWJE8gQQVCT0V0HXD4zdyx59lDGSAOSSsSKZAQoqEgCz5q/mQ97M89BxSfWwFcyAhRYLPTTmp/PRtpb+SQ/6NJ4HNsmHTgECW/ArSeS0yF4aEFMnVkIBp4CdLHSiyb7RPZztTIIPMISFFsgVSr0gYyJJfQY4V+UoMmUKRbIHUz1eRZ+8bfgUJp+ySQ2KK5AukVpEIkCW/gnRc+smJIfV3LV8gtb8r9u8kXV81yLtbqZ0dkIHmkHpFcp1lA4rEgCz7WaTJZhtaXgypVSRjQ+oUif5/04VNHt9arrNJDglfowFjIDWKRIG0uemnl6jn7oqReVjLBhXJGUiNIvFjLS3ui/yU8Go3MwIy2BxS98DHFWcg1Yoc4A27PhYNMymP5yaH1CnyiDOQakVe4e3KloqRvdiy3SWHxBTZ4jvL1imyRWhY9zpgO5zY5MiQakWusjak0jOUz426Xgdsd0uIOcoh1Yqc5w2kSpGkS2Fj0E4xYDsjMk+GVCoy5g2kanMxDZOd9ECep+y7CyLzlEOqFDksMAdyVpEjYssLLyXxSSLXxZCGirzmDuTsV/+k0pAyjTyM03c+WpIc0kyRA3tAvnAD5IwiW+SWDY8J5L942hRDmihylb0hZ757mdxyNw2PZ3Z6X3jdlhySrkjVyWfcgJxS5MigaYqJjS0ex7GUAyAjR4acVqRqnwI3IKdqkUcmTRPXxz8XLEZxXXJI4vpBKwQgJ7bOGJ5mucKAx5txe0NySMoAOIpDALLw5t6Hvjdsu8KBx3FsLp5IDoluQ1EeDMlslj05aI+M5751FjzeMlnZOGmKIYFB+1dMBbJYnY7Zppv4W1L3OclJlqYzm955wWFsbVVTxfRFLVbdRIa/7t3ygeZ8qWimc8sF7/H8Vi2jx0na7ja81HskDJcPPsyH1Oni4sZaJeFdWTZYszmIBZDsY3P86y4Ed+WTdzgir2sfChwSWcROw3/6KCFxT5KnOI6iR4kMYxdB8kBmMxJ8kDyQ0Voi+yh3lLlk74vYUcKbJvcnadzviBwl/E5wLi87pzenvZ52Ls9juR7hxR8MN6mZTr00+QAAAABJRU5ErkJggg=="
    Triangle =""
    table.insert(graphics,{
      Type = "GroupBox",
      Fill = {255, 255, 255},
      CornerRadius = 0,
      StrokeColor = {255, 255, 255},
      StrokeWidth = 0,
      Position = {0, 0},
      Size = {390, 80}
    })
    table.insert(graphics,{
      Type="Image",
      Image=Logo,
      Position={85, 21},
      Size={220, 38}
    })
    table.insert(graphics,{
      Type = "GroupBox",
      Fill = {218, 218, 218},
      CornerRadius = 0,
      StrokeColor = {218, 218, 218},
      StrokeWidth = 0,
      Position = {1, 106},
      Size = {390, 344}
    })
    table.insert(graphics,{
      Type = "Header",
      Text = "Connection Status",
      HTextAlign = "Center",
      Color = {51, 51, 51},
      FontSize = 16,
      Position = {40, 118},
      Size = {310, 20}
    })
    layout["Status"] = {
      PrettyName = string.format("Status"),
      Style = "Status",
      Position = {40, 152},
      Size = {310, 40}
    }
    table.insert(graphics,{
      Type = "Header",
      Text = "Device Information",
      HTextAlign = "Center",
      Color = {51, 51, 51},
      FontSize = 16,
      Position = {40, 202},
      Size = {310, 20}
    })
    table.insert(graphics,{
      Type = "Text",
      Text = "Firmware:",
      FontSize = 14,
      HTextAlign = "Right",
      Position = {55, 234},
      Size = {100, 18}
    })
    layout["system_fwversion"] = {
      PrettyName = "Firmware Version",
      Style = "Text",
      FontSize = 12,
      HTextAlign = "Center",
      Padding = 0,
      Color = {200, 200, 200},
      StrokeColor = {105, 105, 105},
      StrokeWidth = 1,
      Position = {174, 234},
      Size = {130, 20}
    }
    table.insert(graphics,{
      Type = "Header",
      Text = "Input Select",
      HTextAlign = "Center",
      Color = {51, 51, 51},
      FontSize = 16,
      Position = {40, 290},
      Size = {310, 20}
    })
    layout["select_off"] = {
      PrettyName = "Select~Off",
      Legend = "Off",
      FontSize = 14,
      Style = "Button",
      ButtonStyle = "Flat",
      Color = {210, 71, 39},
      OffColor = {109, 129, 142},
      UnlinkOffColor = true,
      Position = {40, 316},
      Size = {100, 100},
      CornerRadius = 2,
    }
    layout["select_pc1"] = {
      PrettyName = "Select~PC 1",
      Legend = "PC 1",
      FontSize = 14,
      Style = "Button",
      ButtonStyle = "Flat",
      Color = {210, 71, 39},
      OffColor = {109, 129, 142},
      UnlinkOffColor = true,
      Position = {145, 316},
      Size = {100, 100},
      CornerRadius = 2,
    }
    layout["select_pc2"] = {
      PrettyName = "Select~PC 2",
      Legend = "PC 2",
      FontSize = 14,
      Style = "Button",
      ButtonStyle = "Flat",
      Color = {210, 71, 39},
      OffColor = {109, 129, 142},
      UnlinkOffColor = true,
      Position = {250, 316},
      Size = {100, 100},
      CornerRadius = 2,
    }
    table.insert(graphics,{
      Type = "Text",
      Text = "Developed by Isaac Porter",
      FontSize = 12,
      HTextAlign = "Right",
      Position = {1, 430},
      Size = {150, 18}
    })
  end
  return layout, graphics
end

--Start event based logic
if Controls then
  -- Status
  -- Have an interior status table to aggregate statuses
  internalStatus = {}
  -- Each entry should be a table with:
  -- reason: string
  -- state: number
  --    0: OK (green)
  --    1: Compromised (orange)
  --    2: Fault (red)
  --    3: Not Present (gray)
  --    4: Missing (dark red)
  --    -1: Initializing (light blue)
  statusUpdater = Timer.New()
  statusUpdater.EventHandler = function()
    local status = -1
    local reason = ""
    for k, v in pairs(internalStatus) do
      if v.status > status then
        status = v.status
        reason = v.reason
      elseif v.status == status then
        if reason == "" then
          reason = v.reason
        else
          reason = reason .. ", " .. v.reason
        end
      end
    end
    if status == -1 then status = 5 end -- Remap to QSYS values
    if reason == "" then
      Controls['Status'].Value = status
      Controls['Status'].String = ''
    else
      Controls['Status'].Value = status
      Controls['Status'].String = reason
    end
  end
  statusUpdater:Start(1)
  
  -- RS232 connection
  connection = SerialPorts[1]
  connection.EventHandler = function(port, msg)
    if msg == SerialPorts.Events.Data then
      local line = port:ReadLine(SerialPorts.EOL.CrLf)
      while line ~= nil do
        print("RS232 RX: "..line)
        if string.find(line, "FW_VER") then
          Controls["system_fwversion"].String = string.sub(line, 8)
        elseif tonumber(string.sub(line,1,1)) then
          UpdateSelectFeedback(tonumber(string.sub(line,1,1)))
        end
        line = port:ReadLine(SerialPorts.EOL.CrLf)
      end
    end
  end
  
  -- Polling
  pollTimer = Timer.New()
  pollTimer.EventHandler = function(timer)
    Poll()
  end
  
  function PollTimerInitialize()
    pollTimer:Stop()
    pollTimer:Start(5)
  end
  
  function Poll()
    SendData("GH")
    SendData("FW")
  end
  
  -- Helper Functions
  function SendData(dataToSend)
    -- Fault if Serial Port is not working
    if connection.IsOpen then
      internalStatus["plugin"] = {
        status = 0,
        reason = ""
      }
    else
      internalStatus["plugin"] = {
        status = 2,
        reason = "Serial Port Not Open"
      }
      -- Attempt to open Serial Port
      connection:Open( 9600, 8, "N")
    end
    print("RS232 TX: "..dataToSend) -- Debug
    -- Fake Feedback before confirming it on the Poll
    if string.find(dataToSend, "SH") then
      UpdateSelectFeedback(string.sub(dataToSend, -1))
    end
    -- Send Data and continue Polling
    connection:Write(dataToSend.."\n")
    PollTimerInitialize()
  end
  
  
  -- Controls
  ControlNames = {"select_off", "select_pc1", "select_pc2"}
  for idx,val in ipairs(ControlNames) do
    Controls[val].EventHandler = function()
      SendData("SH "..(idx-1))
    end
  end
  
  function UpdateSelectFeedback(intIndex)
    for idx,val in ipairs(ControlNames) do
      Controls[val].Boolean = (idx==(intIndex+1))
      end
  end
  
  internalStatus["plugin"] = {
    status = -1,
    reason = ""
  }
  PollTimerInitialize()
end
